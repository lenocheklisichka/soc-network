{"version":3,"sources":["reportWebVitals.ts","hoc/withAuthRedirect.tsx","components/News/News.tsx","api/api.ts","components/Music/Music.tsx","components/Settings/Settings.tsx","redux/dialogs-reducer.ts","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","redux/users-reducer.ts","assets/images/preloader.gif","components/common/Preloader/Preloader.tsx","assets/images/avatar-men.png","components/Users/User.tsx","components/Users/Paginator.tsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx","components/Navbar/images-icons/woman-avatar.png","components/Navbar/Navbar.tsx","components/Navbar/NavbarContainer.tsx","assets/images/photo-ava.jpg","assets/images/women.jpg","redux/profile-reducer.ts","components/Profile/ProfileInfo/ProfileStatusHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/AddNewPostForm.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Header/Header.tsx","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","components/Login/LoginForm.tsx","components/Login/Login.tsx","redux/app-reducer.ts","App.tsx","redux/sidebar-reducers.ts","redux/redux-store.ts","index.tsx","components/Navbar/Navbar.module.css","components/Users/Users.module.css","components/Login/Login.module.css","components/Dialogs/Dialogs.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Users/Paginator.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Dialogs/Message/Message.module.css","components/Header/Header.module.css"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","MapStateToPropsTypeForRedirect","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","ResultCodesEnum","compose","Music","React","SEND_MESSAGE","initialState","dialogs","id","v1","name","avatar","messages","message","sendMessageActionCreator","newMessageBody","type","dialogsReducer","action","DialogItem","className","classes","boxNames","src","alt","avatarImg","names","activeClassName","activeLink","Message","AddMessageForm","dispatch","useDispatch","formik","useFormik","initialValues","validate","values","errors","onSubmit","resetForm","handleSubmit","span","form","error","placeholder","value","onChange","handleChange","onBlur","handleBlur","textarea","Button","variant","color","Dialogs","dialogsElements","dialogsPage","map","d","messagesElements","m","namesItem","messageBox","newMessage","mapStateToProps","mapDispatchToProps","onSendMessage","DialogsContainer","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","response","data","post","delete","userId","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","TOGGLE_IS_FETCHING","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FOLLOWING_PROGRESS","defaultState","users","totalUsersCount","isFetching","followingInProgress","toggleIsFetching","toggleFollowingProgress","userID","usersReducer","u","followed","filter","Preloader","preloader","User","boxUser","boxUsers","photos","small","userPhoto","btn","style","textTransform","disabled","some","onClick","unfollow","follow","blockName","city","Paginator","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","p","selectedPage","Users","pagesNumber","getUsers","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","getUsersThunk","this","res","resultCode","Success","followSuccess","unfollowSuccess","setCurrentPage","items","totalCount","Navbar","friendElements","sidebar","friends","f","friend","woman","nav","item","itemSettings","titleFriends","NavbarContainer","ADD_POST","SET_USER_PROFILE","SET_STATUS","posts","likesCount","profile","addPostActionCreator","newPostText","setStatusAC","updateStatusTC","profileReducer","postId","newPost","ProfileStatusHooks","editMode","setEditMode","setStatus","useEffect","profileName","fullName","avaWomen","women","aboutMe","contact","contacts","vk","telegram","github","e","currentTarget","autoFocus","ProfileInfo","sochi","large","avaWoman","Post","like","AddNewPostForm","marginLeft","MyPosts","memo","postsElements","myPost","MyPostsContainer","profilePage","addPost","Profile","ProfileContainer","match","params","autorizedUserId","history","getUsersProfile","a","withRouter","Header","header","loginBlock","login","logoutTC","SET_USER_DATA","setAuthUserData","getAuthUserData","loginTC","authReducer","HeaderContainer","LoginForm","test","length","Grid","container","justifyContent","touched","TextField","label","margin","getFieldProps","FormControlLabel","control","Checkbox","formLogin","headerLogin","INITIALIZED_SUCCESS","initialized","appReducer","App","initializeAppTC","path","render","app","promise","Promise","all","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.24b26880.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {Redirect} from \"react-router-dom\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppRootState} from \"../redux/redux-store\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\nconst MapStateToPropsTypeForRedirect = (state: AppRootState): MapStatePropsType => {\r\n    return {isAuth: state.auth.isAuth}\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    const AuthRedirectComponent = (props: MapStatePropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) {\r\n            return <Redirect to={\"/login\"}/>\r\n        }\r\n        return <Component {...restProps as T}/>\r\n    }\r\n    return connect(MapStateToPropsTypeForRedirect)(AuthRedirectComponent)\r\n}","import React, {ComponentType} from \"react\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\n\nconst News = () => {\n    return (\n        <div>\n            News\n        </div>\n    );\n}\n\nexport default compose<ComponentType>(connect(), withAuthRedirect)(News)","import axios, {AxiosResponse} from \"axios\";\r\nimport {UserType} from \"../types/types\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {'API-KEY': 'd41ea747-ce32-41f3-af2e-99d81acb40a6'}\r\n})\r\n\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1,\r\n}\r\n\r\ntype GetItemsType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: string | null\r\n}\r\n\r\ntype MeResponseType = {\r\n    data: {\r\n        id: string\r\n        email: string\r\n        login: string\r\n    }\r\n    resultCode: ResultCodesEnum\r\n    messages: Array<string>\r\n}\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe?: boolean\r\n    captcha?: string\r\n}\r\n\r\nexport type ResponseType<D = {}> = {\r\n    resultCode: number\r\n    messages: Array<string>\r\n    fieldsErrors: Array<string>\r\n    data: D\r\n}\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get<GetItemsType>(`users?page=${currentPage}&count=${pageSize}`,)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n    followUsers(id: string) {\r\n        return instance.post(`follow/${id}`)\r\n    },\r\n    unFollowUsers(id: string) {\r\n        return instance.delete(`follow/${id}`)\r\n    },\r\n    getProfile(userId: string) {\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: string) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId: string) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put('profile/status', {status})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<MeResponseType>(`auth/me`)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false) {\r\n        return instance.post<LoginParamsType, AxiosResponse<ResponseType<{ userId: number }>>>('auth/login', {\r\n            email,\r\n            password,\r\n            rememberMe\r\n        })\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n    }\r\n}","import React, {ComponentType} from \"react\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\n\nclass Music extends React.Component {\n    render() {\n        return (\n            <div>\n                Music\n            </div>\n        );\n    }\n}\n\nexport default compose<ComponentType>(connect(), withAuthRedirect)(Music)\n","import React, {ComponentType} from \"react\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\n\nconst Settings = () => {\n    return (\n        <div>\n            Settings\n        </div>\n    );\n}\n\nexport default compose<ComponentType>(connect(), withAuthRedirect)(Settings)","import {ActionsType, DialogType, MessageType} from \"../types/types\";\nimport {v1} from \"uuid\";\n\nconst SEND_MESSAGE = \"SEND-MESSAGE\";\n\nconst initialState = {\n    dialogs: [\n        {\n            id: v1(),\n            name: \"Elena\",\n            avatar: 'https://klike.net/uploads/posts/2019-07/1564314090_3.jpg'\n        },\n        {\n            id: v1(),\n            name: \"Petr\",\n            avatar: 'https://storage.theoryandpractice.ru/tnp/uploads/image_unit/000/156/586/image/base_87716f252d.jpg'\n        },\n        {\n            id: v1(),\n            name: \"Anna\",\n            avatar: \"https://cs8.pikabu.ru/post_img/big/2017/11/21/8/151127099913557940.jpg\"\n        },\n        {\n            id: v1(),\n            name: \"Ludmila\",\n            avatar: \"https://cs8.pikabu.ru/post_img/big/2017/11/21/8/151127099913557940.jpg\"\n        },\n        {\n            id: v1(),\n            name: \"Aleksey\",\n            avatar: 'https://bipbap.ru/wp-content/uploads/2017/12/65620375-6b2b57fa5c7189ba4e3841d592bd5fc1-800-640x426.jpg'\n        },\n    ] as Array<DialogType>,\n\n    messages: [\n        {id: v1(), message: \"Hey, favorite! How are you?\"},\n        {id: v1(), message: \"Hey my dear! I'm great!I work remotely.How are you?\"},\n        {id: v1(), message: \"Hey, Anna! How are you doing in school?\"},\n        {id: v1(), message: \"Hey! I am fine! There are only fives at school\"},\n    ] as Array<MessageType>\n}\n\nexport type InitialStateType = typeof initialState\n\nconst dialogsReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case SEND_MESSAGE: {\n            return {\n                ...state,\n                messages: [...state.messages, {id: v1(), message: action.newMessageBody}],\n            }\n        }\n        default:\n            return state\n    }\n}\n\ntype SendMessageActionCreatorActionType = { type: typeof SEND_MESSAGE, newMessageBody: string }\nexport const sendMessageActionCreator = (newMessageBody: string): SendMessageActionCreatorActionType =>\n    ({type: \"SEND-MESSAGE\", newMessageBody} as const)\n\nexport default dialogsReducer","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport classes from \"./DialogItem.module.css\";\nimport {DialogType} from \"../../../types/types\";\n\nconst DialogItem: React.FC<DialogType> = (props) => {\n    return (\n        <div className={classes.boxNames}>\n            <NavLink to={\"/dialogs/\" + props.id}>\n                <img src={props.avatar} alt=\"\" className={classes.avatarImg}/>\n            </NavLink>\n            <div className={classes.names}>\n                <NavLink to={\"/dialogs/\" + props.id} activeClassName={classes.activeLink}>{props.name}</NavLink>\n            </div>\n        </div>\n    );\n}\n\nexport default DialogItem;","import React from \"react\";\nimport classes from \"./Message.module.css\";\nimport {MessageType} from \"../../../types/types\";\n\nconst Message: React.FC<MessageType> = (props) => {\n    return (\n        <div className={classes.messages}>\n            <div className={classes.message}>{props.message}</div>\n        </div>\n    )\n}\nexport default Message;","import React from \"react\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport {useFormik} from \"formik\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {sendMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\ntype ErrorType = {\r\n    newMessageBody?: string\r\n}\r\n\r\nconst AddMessageForm = () => {\r\n    const dispatch = useDispatch()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            newMessageBody: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: ErrorType = {}\r\n            if (values.newMessageBody) {\r\n                return undefined\r\n            } else if (!values.newMessageBody) {\r\n                errors.newMessageBody = 'Field is required!'\r\n            }\r\n            return errors\r\n        },\r\n\r\n        onSubmit: values => {\r\n            dispatch(sendMessageActionCreator(values.newMessageBody))\r\n            formik.resetForm()\r\n        },\r\n    })\r\n    return (\r\n        <form onSubmit={formik.handleSubmit}>\r\n            {formik.errors.newMessageBody && <span className={classes.span}>{formik.errors.newMessageBody}</span>}\r\n            <div className={classes.form + \" \" + (formik.errors.newMessageBody ? classes.error : \"\")}>\r\n                <textarea placeholder=\"Enter your message...\"\r\n                          name=\"newMessageBody\"\r\n                          value={formik.values.newMessageBody}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          className={classes.textarea}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Button type={'submit'} variant={'contained'} color={'primary'}>Send</Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport default AddMessageForm;","import React from \"react\";\nimport classes from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {DialogsPageType} from \"../../types/types\";\nimport AddMessageForm from \"./AddMessageForm\";\n\nexport type DialogsPropsType = {\n    dialogsPage: DialogsPageType\n}\n\nconst Dialogs = (props: DialogsPropsType) => {\n    let dialogsElements = props.dialogsPage.dialogs.map(d =>\n        <DialogItem key={d.id} name={d.name} id={d.id} avatar={d.avatar}/>)\n\n    let messagesElements = props.dialogsPage.messages.map(m =>\n        <Message key={m.id} id={m.id} message={m.message}/>)\n\n    return (\n        <div>\n            <div className={classes.dialogs}>\n                <div className={classes.namesItem}>{dialogsElements}</div>\n                <div>\n                    <div className={classes.messageBox}>{messagesElements}</div>\n                </div>\n            </div>\n            <div className={classes.newMessage}>\n                <AddMessageForm/>\n            </div>\n        </div>\n    );\n}\n\nexport default Dialogs;\n","import {sendMessageActionCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {DialogsPageType} from \"../../types/types\";\nimport {AppDispatch, AppRootState} from \"../../redux/redux-store\";\nimport {connect} from \"react-redux\";\nimport {ComponentType} from \"react\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\ntype MapStateToPropsType = {\n    dialogsPage: DialogsPageType\n}\n\ntype MapDispatchToPropsType = {\n    onSendMessage: (newMessageBody: string) => void\n}\n\nlet mapStateToProps = (state: AppRootState): MapStateToPropsType => {\n    return {\n        dialogsPage: state.dialogsPage\n    }\n}\n\nlet mapDispatchToProps = (dispatch: AppDispatch): MapDispatchToPropsType => {\n    return {\n        onSendMessage: (newMessageBody: string) => {\n            dispatch(sendMessageActionCreator(newMessageBody))\n        }\n    }\n}\n\nexport const DialogsContainer = withAuthRedirect(connect(mapStateToProps, mapDispatchToProps)(Dialogs))\n\nexport default compose<ComponentType>(\n    connect(mapStateToProps, mapDispatchToProps), withAuthRedirect,)(Dialogs)\n","import {ActionsType, UserType} from \"../types/types\";\r\nimport {ResultCodesEnum, usersAPI} from \"../api/api\";\r\nimport {AppDispatch} from \"./redux-store\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET-USERS\";\r\nconst SET_CURRENT_PAGE = \"SET-CURRENT-PAGE\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET-TOTAL-USERS-COUNT\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE-IS-FOLLOWING-PROGRESS\";\r\n\r\nconst defaultState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<string>, // array id users\r\n}\r\n\r\ntype InitialStateType = typeof defaultState\r\n\r\nconst usersReducer = (state: InitialStateType = defaultState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW :\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    return u.id === action.userID ? {...u, followed: true} : u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    return u.id === action.userID ? {...u, followed: false} : u\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {...state, users: action.users}\r\n        case  SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        case TOGGLE_IS_FETCHING :\r\n            return {...state, isFetching: action.isFetching}\r\n        case  SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {...state,followingInProgress: action.isFetching \r\n                ? [...state.followingInProgress, action.userID]\r\n                :state.followingInProgress.filter(id => id !== action.userID)}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype FollowSuccessActionType = {type: typeof FOLLOW, userID: string}\r\nexport const followSuccess = (userID: string):FollowSuccessActionType => \r\n ({type: FOLLOW, userID} as const)\r\n\r\ntype UnfollowSuccessActionType = {type: typeof UNFOLLOW, userID: string}\r\nexport const unfollowSuccess = (userID: string):UnfollowSuccessActionType => \r\n ({type: UNFOLLOW, userID} as const)\r\n\r\ntype SetUsersActionType = {type: typeof SET_USERS, users: Array<UserType>}\r\nexport const setUsers = (users: Array<UserType>):SetUsersActionType =>\r\n ({type: SET_USERS, users} as const)\r\n\r\ntype SetCurrentPageActionType = {type: typeof SET_CURRENT_PAGE, currentPage: number}\r\nexport const setCurrentPage = (currentPage: number):SetCurrentPageActionType => \r\n ({type: SET_CURRENT_PAGE, currentPage} as const)\r\n\r\ntype SetTotalUsersCountActionType = {type: typeof SET_TOTAL_USERS_COUNT, totalUsersCount: number}\r\nexport const setTotalUsersCountAC = (totalUsersCount: number):SetTotalUsersCountActionType => \r\n ({type: SET_TOTAL_USERS_COUNT, totalUsersCount} as const)\r\n\r\ntype ToggleIsFetchingActionType = {type: typeof TOGGLE_IS_FETCHING, isFetching: boolean}\r\nexport const toggleIsFetching = (isFetching: boolean):ToggleIsFetchingActionType => \r\n ({type: TOGGLE_IS_FETCHING, isFetching} as const)\r\n\r\ntype ToggleFollowingProgressActionType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS,isFetching: boolean, userID: string\r\n }\r\nexport const toggleFollowingProgress = (isFetching: boolean, userID: string)\r\n:ToggleFollowingProgressActionType => \r\n({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userID} as const)\r\n\r\nexport const getUsersThunk = (currentPage: number, pageSize: number) => {\r\n    return (dispatch: AppDispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(currentPage))\r\n\r\n        usersAPI.getUsers(currentPage, pageSize)\r\n        .then((data) => {\r\n            dispatch(toggleIsFetching(false))\r\n            dispatch(setUsers(data.items))\r\n            dispatch(setTotalUsersCountAC(data.totalCount))\r\n        });\r\n    }\r\n}\r\n\r\nexport const follow = (userID: string) => {\r\n    return (dispatch: AppDispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userID))\r\n        usersAPI.followUsers(userID)\r\n            .then((res: any) => {\r\n                if (res.data.resultCode === ResultCodesEnum.Success) {\r\n                    dispatch(followSuccess(userID))\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userID))\r\n            })\r\n    }\r\n}\r\nexport const unfollow = (userID: string) => {\r\n    return (dispatch: AppDispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userID))\r\n        usersAPI.unFollowUsers(userID)\r\n            .then((res: any) => {\r\n                if (res.data.resultCode === ResultCodesEnum.Success) {\r\n                    dispatch(unfollowSuccess(userID))\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userID))\r\n            })\r\n    }\r\n}\r\n\r\nexport default usersReducer","export default __webpack_public_path__ + \"static/media/preloader.e2ef5a7f.gif\";","import preloader from \"../../../assets/images/preloader.gif\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} alt=''/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","export default __webpack_public_path__ + \"static/media/avatar-men.7062c847.png\";","import React from \"react\"\r\nimport classes from \"./Users.module.css\"\r\nimport {NavLink} from \"react-router-dom\"\r\nimport Preloader from \"./../common/Preloader/Preloader\"\r\nimport {UserType} from \"../../types/types\"\r\nimport userPhoto from \"./../../assets/images/avatar-men.png\"\r\nimport Button from \"@mui/material/Button\";\r\n\r\nexport type UserPropsType = {\r\n    users: Array<UserType>\r\n    isFetching: boolean\r\n    followingInProgress: Array<string>\r\n    follow: (userID: string) => void\r\n    unfollow: (userID: string) => void\r\n}\r\n\r\nexport const User = (props: UserPropsType) => {\r\n    return (\r\n        <div className={classes.boxUser}>\r\n            {\r\n                props.users.map(u => <div key={u.id} className={classes.boxUsers}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={'/profile/' + u.id}>\r\n                                {props.isFetching ? <Preloader/> : null}\r\n                                <img src={u.photos.small !== null ? u.photos.small : userPhoto} alt={\"\"}\r\n                                     className={classes.avatar}/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {u.followed ? <div className={classes.btn}>\r\n                                    <Button\r\n                                        style={{textTransform: 'lowercase'}}\r\n                                        disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                        onClick={() => {\r\n                                            props.unfollow(u.id)\r\n                                        }}>Unfollow\r\n                                    </Button>\r\n                                </div>\r\n                                : <div className={classes.btn}>\r\n                                    <Button\r\n                                        style={{textTransform: 'lowercase'}}\r\n                                        disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                        onClick={() => {\r\n                                            props.follow(u.id)\r\n                                        }}>Follow\r\n                                    </Button>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </span>\r\n                    <div className={classes.blockName}>\r\n                        <div>\r\n                            <div>{u.name}</div>\r\n                            <div className={classes.status}>{u.status}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div>{\"u.location.country\"}</div>\r\n                            <div className={classes.city}>{\"u.location.city\"}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport classes from \"./Paginator.module.css\"\r\n\r\nexport type PaginatorPropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nexport const Paginator: React.FC<PaginatorPropsType> = ({\r\n                                                            totalUsersCount, pageSize,\r\n                                                            currentPage, onPageChanged,\r\n                                                            portionSize = 15\r\n                                                        }) => {\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    const [portionNumber, setPortionNumber] = useState(1)\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div className={classes.paginator}>\r\n            {\r\n                portionNumber > 1 &&\r\n                <button className={classes.btn} onClick={() => {\r\n                    setPortionNumber(portionNumber - 1)\r\n                }}>Prev</button>\r\n            }\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                    return <span key={p} className={currentPage === p ? classes.selectedPage : \"\"}\r\n                                 onClick={() => {\r\n                                     onPageChanged(p)\r\n                                 }}>{p}</span>\r\n\r\n                })}\r\n            {\r\n                portionCount > portionNumber &&\r\n                <button className={classes.btn} onClick={() => {\r\n                    setPortionNumber(portionNumber + 1)\r\n                }}>Next</button>\r\n            }\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport UsersPropsType from \"./Users\";\r\nimport classes from \"./Users.module.css\";\r\nimport {UserType} from \"../../types/types\"\r\nimport {User} from \"./User\"\r\nimport {Paginator} from \"./Paginator\";\r\n\r\ntype UsersPropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: Array<UserType>\r\n    isFetching: boolean\r\n    followingInProgress: Array<string>\r\n    follow: (userID: string) => void\r\n    unfollow: (userID: string) => void\r\n}\r\n\r\nlet Users = (props: UsersPropsType) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.pagesNumber}>\r\n                <Paginator totalUsersCount={props.totalUsersCount} pageSize={props.pageSize}\r\n                           currentPage={props.currentPage} onPageChanged={props.onPageChanged}\r\n                />\r\n            </div>\r\n            <User users={props.users} isFetching={props.isFetching}\r\n                  followingInProgress={props.followingInProgress}\r\n                  follow={props.follow} unfollow={props.unfollow}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import {AppRootState} from \"./redux-store\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nexport const getUsersSelector = (state: AppRootState) => {\r\n     return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    users => {\r\n    return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state: AppRootState) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppRootState) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppRootState) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppRootState) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppRootState) => {\r\n    return state.usersPage.followingInProgress\r\n}","import {AppRootState} from \"../../redux/redux-store\";\r\nimport {\r\n    follow, getUsersThunk, unfollow,\r\n} from \"../../redux/users-reducer\";\r\nimport {UserType} from \"../../types/types\";\r\nimport {connect} from \"react-redux\";\r\nimport React, {ComponentType} from \"react\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport Users from \"./Users\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\ntype MapStatePropsType = {\r\n    currentPage: number\r\n    pageSize: number\r\n    isFetching: boolean\r\n    totalUsersCount: number\r\n    users: Array<UserType>\r\n    followingInProgress: Array<string>\r\n}\r\ntype MapDispatchPropsType = {\r\n    getUsersThunk: (currentPage: number, pageSize: number) => void\r\n    follow: (userID: string) => void\r\n    unfollow: (userID: string) => void\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunk(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsersThunk(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching\r\n                ? <Preloader/>\r\n                : <Users users={this.props.users}\r\n                         totalUsersCount={this.props.totalUsersCount}\r\n                         pageSize={this.props.pageSize}\r\n                         currentPage={this.props.currentPage}\r\n                         follow={this.props.follow}\r\n                         unfollow={this.props.unfollow}\r\n                         onPageChanged={this.onPageChanged}\r\n                         isFetching={this.props.isFetching}\r\n                         followingInProgress={this.props.followingInProgress}\r\n                />\r\n            }\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppRootState): MapStatePropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch: AppDispatch): MapDispatchPropsType => {\r\n//     return {\r\n//         follow: (userID: string) => {\r\n//             dispatch(followAC(userID))\r\n//         },\r\n//         unfollow: (userID: string) => {\r\n//             dispatch(unfollowAC(userID))\r\n//         },\r\n//         setUsers: (users: Array<UserType>) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         setCurrentPage: (pageNumber: number) => {\r\n//             dispatch(setCurrentPageAC(pageNumber))\r\n//         },\r\n//         toggleIsFetching: (isFetching: boolean) => {\r\n//             dispatch(toggleIsFetchingAC(isFetching))\r\n//         },\r\n//         // setTotalUsersCount: (totalCount: number) => {\r\n//         //     dispatch(setTotalUsersCountAC(totalCount))\r\n//         // }\r\n//     }\r\n// }\r\n\r\n// export default withAuthRedirect( connect(mapStateToProps, {\r\n//     follow, unfollow,\r\n//     setUsers, setCurrentPage,\r\n//     toggleIsFetching, toggleFollowingProgress,\r\n//     getUsersThunk,\r\n//     setTotalUsersCount: setTotalUsersCountAC,\r\n// })(UsersContainer));\r\nexport default compose<ComponentType>(\r\n    connect(mapStateToProps, {follow, unfollow, getUsersThunk,}), withAuthRedirect)(UsersContainer)\r\n","export default __webpack_public_path__ + \"static/media/woman-avatar.b562e6d8.png\";","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport classes from \"./Navbar.module.css\";\nimport {InitialStateSidebarType} from \"../../redux/sidebar-reducers\";\nimport woman from \"../Navbar/images-icons/woman-avatar.png\";\n\ntype SidebarPropsType = {\n    sidebar: InitialStateSidebarType\n}\n\nexport const Navbar = (props: SidebarPropsType) => {\n\n    const friendElements = props.sidebar.friends.map(f =>\n        <div className={classes.friend} key={f.id}><img src={woman} alt=''/>{f.name}</div>\n    )\n\n    return (\n        <div className={classes.nav}>\n            <div className={classes.item}>\n                <NavLink to={\"/profile\"} activeClassName={classes.activeLink}>Profile</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to={\"/dialogs\"} activeClassName={classes.activeLink}>Messages</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to={\"/users\"} activeClassName={classes.activeLink}>Users</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to={\"/news\"} activeClassName={classes.activeLink}>News</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to={\"/musics\"} activeClassName={classes.activeLink}>Music</NavLink>\n            </div>\n            <div className={classes.itemSettings}>\n                <NavLink to={\"/settings\"} activeClassName={classes.activeLink}>Settings</NavLink>\n            </div>\n\n            <div className={classes.titleFriends}>Friends online:</div>\n            <div className={classes.friends}>\n                {friendElements}\n            </div>\n        </div>\n    );\n}\n\nexport default Navbar;","import {InitialStateSidebarType} from \"../../redux/sidebar-reducers\";\r\nimport {connect} from \"react-redux\";\r\nimport Navbar from \"./Navbar\";\r\nimport {AppRootState} from \"../../redux/redux-store\";\r\n\r\ntype mapStateToPropsType = {\r\n    sidebar: InitialStateSidebarType\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootState): mapStateToPropsType => {\r\n    return {\r\n        sidebar: state.sidebar\r\n    }\r\n}\r\n\r\nexport const NavbarContainer = connect(mapStateToProps)(Navbar);","export default __webpack_public_path__ + \"static/media/photo-ava.91f9e476.jpg\";","export default __webpack_public_path__ + \"static/media/women.56208115.jpg\";","import {v1} from \"uuid\";\nimport {ActionsType, PostType, ProfileType} from \"../types/types\";\nimport {AppDispatch} from \"./redux-store\";\nimport {profileAPI, ResultCodesEnum, usersAPI} from \"../api/api\";\nimport {AxiosResponse} from \"axios\";\n\nconst ADD_POST = \"ADD-POST\";\nconst SET_USER_PROFILE = \"SET-USER-PROFILE\";\nconst SET_STATUS = \"SET-STATUS\";\nconst DELETE_POST = \"DELETE-POST\"\n\nconst initialState = {\n    posts: [\n        {id: v1(), message: \"Hi, my name is Elena! I travel a lot around the world!\", likesCount: 75},\n        {id: v1(), message: \"I'm  frontend developer!\", likesCount: 100},\n    ] as Array<PostType>,\n    profile: null as ProfileType | null,\n    status: \"\",\n}\n\nexport type InitialStateType = typeof initialState\n\nconst profileReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case \"DELETE_POST\":\n            return { ...state, posts: state.posts.filter(p => p.id !== action.postId)}\n        case ADD_POST: {\n            const newPost: PostType = {\n                id: v1(),\n                message: action.newPostText,\n                likesCount: 0\n            }\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n            }\n        }\n        case SET_USER_PROFILE: {\n            return {...state, profile: action.profile}\n        }\n        case SET_STATUS: {\n            return {...state, status: action.status}\n        }\n        default:\n            return state\n    }\n}\n\ntype AddPostActionCreatorActionType = { type: typeof ADD_POST, newPostText: string }\nexport const addPostActionCreator = (newPostText: string): AddPostActionCreatorActionType =>\n    ({type: ADD_POST, newPostText} as const)\n\ntype SetUserProfileActionCreatorActionType = { type: typeof SET_USER_PROFILE, profile: ProfileType }\nexport const setUserProfileAC = (profile: ProfileType): SetUserProfileActionCreatorActionType =>\n    ({type: SET_USER_PROFILE, profile} as const)\n\ntype SetStatusActionType = { type: typeof SET_STATUS, status: string }\nexport const setStatusAC = (status: string): SetStatusActionType =>\n    ({type: SET_STATUS, status} as const)\n\nexport const deletePostAC = (postId: string) => ({type: \"DELETE_POST\", postId} as const)\n\nexport const getUsersProfile = (userId: string) => async (dispatch: AppDispatch) => {\n    let response = await usersAPI.getProfile(userId)\n        dispatch(setUserProfileAC(response.data))\n}\nexport const getStatus = (userId: string) => (dispatch: AppDispatch) => {\n    profileAPI.getStatus(userId).then((response) => {\n        dispatch(setStatusAC(response.data))\n    })\n}\nexport const updateStatusTC = (status: string) => (dispatch: AppDispatch) => {\n    profileAPI.updateStatus(status).then((response: any) => {\n        if (response.data.resultCode === ResultCodesEnum.Success) {\n            dispatch(setStatusAC(response.data.status))\n        }\n    })\n}\n\nexport default profileReducer\n\n\n","import {ContactsType} from \"../../../types/types\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport avaWomen from \"./../../../assets/images/photo-ava.jpg\"\r\nimport women from \"./../../../assets/images/women.jpg\"\r\nimport {updateStatusTC} from \"../../../redux/profile-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport type ProfileStatusPropsType = {\r\n    status: string\r\n    fullName: string\r\n    aboutMe: string\r\n    contacts: ContactsType\r\n}\r\n\r\nconst ProfileStatusHooks = (props: ProfileStatusPropsType) => {\r\n    const dispatch = useDispatch()\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false)\r\n        dispatch(updateStatusTC(status))\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.profileName}>{props.fullName || avaWomen || women}</div>\r\n            <div><span><b>About Me:</b></span> {props.aboutMe || \"Frontend Developer\"}</div>\r\n            <div className={classes.contact}><span>My contact:</span></div>\r\n            <div className={classes.contacts}><span><b>vk:</b></span> {props.contacts.vk || \"https://vk.com\"}</div>\r\n            <div className={classes.contacts}>\r\n                <span><b>telegram:</b></span> {props.contacts.telegram || \"https://t.me/Lisichka_rizhaya\"}</div>\r\n            <div className={classes.contacts}>\r\n                <span><b>github:</b></span> {props.contacts.github || \"https://github.com/lenocheklisichka\"}</div>\r\n            <div className={classes.status}>\r\n                {!editMode &&\r\n                <span onClick={activateEditMode}>{props.status || \"---\"}</span>}\r\n                {editMode &&\r\n                <input onChange={onStatusChange} autoFocus={true}\r\n                       onBlur={deActivateEditMode}\r\n                       value={status}/>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ProfileStatusHooks;\r\n","import React from \"react\";\nimport classes from \"./ProfileInfo.module.css\";\nimport {ProfileType} from \"../../../types/types\";\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport avaWoman from \"./../../../assets/images/photo-ava.jpg\"\nimport ProfileStatusHooks from \"./ProfileStatusHooks\";\n\nexport type ProfileInfoPropsType = {\n    profile: ProfileType | null\n    status: string\n}\n\nexport type PhotosType = {\n    small: string\n    large: string\n}\n\nconst ProfileInfo = (props: ProfileInfoPropsType) => {\n    if (!props.profile) {\n        return <Preloader/>\n    }\n    return (\n        <div>\n            <div className={classes.sochi}>\n            </div>\n            <div className={classes.profile}>\n                <img src={props.profile.photos.large || avaWoman} alt=\"\"/>\n                <div>\n                    <ProfileStatusHooks status={props.status}\n                                        aboutMe={props.profile.aboutMe}\n                                        contacts={props.profile.contacts}\n                                        fullName={props.profile.fullName}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ProfileInfo;","import React from \"react\";\nimport classes from \"./Post.module.css\";\nimport {PostType} from \"../../../../types/types\";\n\nconst Post: React.FC<PostType> = (props) => {\n    return (\n        <div>\n            <div className={classes.item}>\n                <img src=\"https://www.meme-arsenal.com/memes/74a9592e66a76c818ed95c1216487fa7.jpg\" alt=\"\"/>\n                <p className={classes.post}>{props.message}</p>\n            </div>\n            <div>\n                <span className={classes.like}>like</span> <span>{props.likesCount}</span>\n            </div>\n        </div>\n    );\n}\nexport default Post;","import React from \"react\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport {useFormik} from \"formik\";\r\nimport {TextField} from \"@mui/material\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport {FormikErrorType} from \"../../Login/LoginForm\";\r\n\r\ntype FormErrorType = {\r\n    newPostText?: string\r\n}\r\nconst AddNewPostForm = () => {\r\n    const dispatch = useDispatch()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            newPostText: '',\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormErrorType = {}\r\n            if (values.newPostText) {\r\n                return undefined\r\n            } else if (!values.newPostText) {\r\n                errors.newPostText = 'Field is required!'\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(addPostActionCreator(values.newPostText))\r\n            formik.resetForm()\r\n        }\r\n    })\r\n    return (\r\n        <form onSubmit={formik.handleSubmit} className={classes.form}>\r\n            {formik.errors.newPostText && <span className={classes.span}>{formik.errors.newPostText}</span>}\r\n            <div className={classes.form + \" \" + (formik.errors.newPostText ? classes.error : \"\")}>\r\n                <textarea placeholder={'Enter a new post...'}\r\n                          name={'newPostText'}\r\n                          value={formik.values.newPostText}\r\n                          className={classes.textarea}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Button type={'submit'} variant={'contained'}\r\n                        color={'primary'} style={{marginLeft: '10px'}}>Add</Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport default AddNewPostForm;","import React from \"react\";\nimport classes from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\nimport {PostType} from \"../../../types/types\"\nimport AddNewPostForm from \"./AddNewPostForm\";\n\ntype MyPostType = {\n    posts: Array<PostType>\n}\nconst MyPosts = React.memo((props: MyPostType) => {\n\n    let postsElements = [...props.posts].map(p => <div key={p.id}>\n        <Post key={p.id} id={p.id} message={p.message} likesCount={p.likesCount}/></div>)\n\n    return (\n        <div>\n            <h2 className={classes.myPost}>My posts</h2>\n            <AddNewPostForm/>\n            <div className={classes.posts}>{postsElements}</div>\n        </div>\n    )\n})\nexport default MyPosts","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {PostType} from \"../../../types/types\";\nimport {connect} from \"react-redux\";\nimport {AppDispatch, AppRootState} from \"../../../redux/redux-store\";\n\ntype MapStateToPropsType = {\n    posts: Array<PostType>\n}\n\ntype MapDispatchToPropsType = {\n    addPost: (newPostText: string) => void\n}\n\nlet mapStateToProps = (state: AppRootState): MapStateToPropsType => {\n    return {\n        posts: state.profilePage.posts\n    }\n}\n\nlet mapDispatchToProps = (dispatch: AppDispatch): MapDispatchToPropsType => {\n    return {\n        addPost: (newPostText: string) => {\n            dispatch(addPostActionCreator(newPostText))\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\nexport default MyPostsContainer","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport {ProfileType} from \"../../types/types\";\n\nexport type ProfilePropsType = {\n    profile: ProfileType | null\n    status: string\n}\n\nconst Profile = (props: ProfilePropsType) => {\n    return (\n        <div>\n            <ProfileInfo profile={props.profile} status={props.status}/>\n            <MyPostsContainer/>\n        </div>\n    );\n}\nexport default Profile;\n","import React, {ComponentType} from \"react\";\nimport {connect} from \"react-redux\";\nimport {AppRootState} from \"../../redux/redux-store\";\nimport {ProfileType} from \"../../types/types\";\nimport Profile from \"./Profile\";\nimport {withRouter} from \"react-router-dom\";\nimport {RouteComponentProps} from \"react-router-dom\";\nimport {getStatus, getUsersProfile, updateStatusTC} from \"../../redux/profile-reducer\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component<ComponentPropsType> {\n    componentDidMount() {\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = this.props.autorizedUserId\n            if (!userId) {\n                this.props.history.push('/login')\n            }\n        }\n\n        this.props.getUsersProfile(userId)\n        this.props.getStatus(userId)\n    }\n\n    render() {\n        return (\n            <div>\n                <Profile {...this.props} profile={this.props.profile} status={this.props.status}\n                         />\n            </div>\n        )\n    }\n}\n\nexport type PathParamsType = {\n    userId: string\n}\n\nexport type ComponentPropsType = RouteComponentProps<PathParamsType> & MapStatePropsType\n\nexport type MapStatePropsType = {\n    profile: ProfileType | null\n    status: string\n    autorizedUserId: string\n    getUsersProfile: (userId: string) => void\n    getStatus: (userId: string) => void\n}\n\nlet mapStateToProps = (state: AppRootState): MapStatePropsType => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    autorizedUserId: state.auth.userId,\n}) as MapStatePropsType\n\nexport default compose<ComponentType>(\n    connect(mapStateToProps, {getUsersProfile, getStatus, updateStatusTC}),\n    withRouter,\n    withAuthRedirect,\n)(ProfileContainer)\n","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport classes from \"./Header.module.css\";\nimport {HeaderPropsType} from \"./HeaderContainer\";\nimport Button from \"@mui/material/Button\";\n\nfunction Header(props: HeaderPropsType) {\n    return (\n        <header className={classes.header}>\n            <img src=\"https://arch-sochi.ru/wp-content/uploads/2020/12/img-arso-6268.jpg\" alt=\"logo\"/>\n            <div className={classes.loginBlock}>\n                {props.isAuth\n                    ? <div>{props.login} - <Button type={'submit'} variant={'contained'}\n                                                   color={'primary'} onClick={props.logoutTC}>Logout</Button>\n                    </div>\n                    : <NavLink to={'/login'}>Login</NavLink>}\n            </div>\n        </header>\n    )\n}\n\nexport default Header\n","import {ActionsType} from \"../types/types\";\r\nimport {AppDispatch} from \"./redux-store\";\r\nimport {authAPI, ResultCodesEnum} from \"../api/api\";\r\n\r\nconst SET_USER_DATA = \"auth/SET-USER-DATA\";\r\n\r\nconst defaultState = {\r\n    userId: null as string | null,\r\n    login: null as string | null,\r\n    email: null as string | null,\r\n    isAuth: false,\r\n}\r\n\r\nexport type InitialStateType = typeof defaultState\r\n\r\nconst authReducer = (state: InitialStateType = defaultState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA :\r\n            return {\r\n                ...state, ...action.data\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport type SetAuthUserDataActionDataType = {\r\n    userId: string | null,\r\n    login: string | null,\r\n    email: string | null,\r\n    isAuth: boolean\r\n}\r\ntype SetAuthUserDataActionType = {\r\n    type: typeof SET_USER_DATA,\r\n    data: SetAuthUserDataActionDataType\r\n}\r\nexport const setAuthUserData = (userId: string | null, login: string | null, email: string | null, isAuth: boolean)\r\n    : SetAuthUserDataActionType => ({type: SET_USER_DATA, data: {userId, login, email, isAuth}} as const)\r\n\r\nexport const getAuthUserData = () => async (dispatch: AppDispatch) => {\r\n    let response = await authAPI.me()\r\n    if (response.data.resultCode === ResultCodesEnum.Success) {\r\n        let {id, login, email} = response.data.data\r\n        dispatch(setAuthUserData(id, login, email, true))\r\n    }\r\n}\r\n\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean) => async (dispatch: any) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(getAuthUserData())\r\n    }\r\n}\r\n\r\nexport const logoutTC = () => (dispatch: AppDispatch) => {\r\n    authAPI.logout()\r\n        .then((response: any) => {\r\n            if (response.data.resultCode === ResultCodesEnum.Success) {\r\n                dispatch(setAuthUserData(null, null, null, false))\r\n            }\r\n        })\r\n}\r\nexport default authReducer","import React from \"react\";\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {AppRootState} from \"../../redux/redux-store\";\nimport {logoutTC} from \"../../redux/auth-reducer\";\n\nexport type HeaderPropsType = {\n    isAuth: boolean\n    login: string\n    logoutTC: () => void\n}\n\nclass HeaderContainer extends React.Component<HeaderPropsType> {\n    render() {\n        return (\n            <Header {...this.props}/>\n        )\n    }\n}\n\ntype MapStatePropsType = {\n    isAuth: boolean\n    login: string\n}\n\nconst mapStateToProps = (state: AppRootState) => {\n    return {\n        isAuth: state.auth.isAuth,\n        login: state.auth.login,\n    } as MapStatePropsType\n}\n\nexport default connect(mapStateToProps, {logoutTC})(HeaderContainer)\n","import React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Checkbox from \"@mui/material/Checkbox\"\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\"\r\nimport TextField from \"@mui/material/TextField\"\r\nimport {useFormik} from \"formik\";\r\nimport classes from \"./Login.module.css\"\r\nimport {useDispatch} from \"react-redux\";\r\nimport {loginTC} from \"../../redux/auth-reducer\";\r\n\r\nexport type FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\nexport const LoginForm = () => {\r\n    const dispatch = useDispatch()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Email field is required!';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Password field is required!'\r\n            } else if (values.password.length < 3) {\r\n                errors.password = \"Password must be more than 3 characters!\"\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values.email, values.password, values.rememberMe))\r\n            formik.resetForm()\r\n        },\r\n    })\r\n    // if(props.isAuth) {\r\n    //     return <Redirect to={'/profile'}/>\r\n    // }\r\n    return (\r\n        <Grid container justifyContent={'center'}>\r\n            <form onSubmit={formik.handleSubmit} className={classes.form}>\r\n\r\n                {formik.touched.email && formik.errors.email ?\r\n                    <div className={classes.span}>{formik.errors.email}</div> : null}\r\n\r\n                <div className={classes.form + \" \" + (formik.errors.email ? classes.error : \"\")}>\r\n                    <TextField label=\"Email\"\r\n                               margin=\"normal\"\r\n                        // name=\"email\"\r\n                        // onChange={formik.handleChange}\r\n                        // value={formik.values.email}\r\n                        // onBlur={formik.handleBlur}\r\n                               {...formik.getFieldProps(\"email\")}\r\n                    />\r\n                </div>\r\n                {formik.touched.password && formik.errors.password ?\r\n                    <div className={classes.span}>{formik.errors.password}</div> : null}\r\n                <div className={classes.form + \" \" + (formik.errors.password ? classes.error : \"\")}>\r\n                    <TextField type=\"password\"\r\n                               label=\"Password\"\r\n                               margin=\"normal\"\r\n                               {...formik.getFieldProps(\"password\")}\r\n                    />\r\n                </div>\r\n                <FormControlLabel label={'Remember me'}\r\n                                  control={<Checkbox {...formik.getFieldProps(\"rememberMe\")}/>}/>\r\n                <Button type={'submit'} variant={'contained'} color={'primary'}>\r\n                    Login\r\n                </Button>\r\n            </form>\r\n        </Grid>\r\n    )\r\n}","import React from \"react\";\r\nimport {LoginForm} from \"./LoginForm\";\r\nimport classes from \"./Login.module.css\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginTC} from \"../../redux/auth-reducer\";\r\nimport {AppRootState} from \"../../redux/redux-store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Login = (props: MapStatePropsType) => {\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return (\r\n        <div className={classes.formLogin}>\r\n            <h1 className={classes.headerLogin}>Login</h1>\r\n            <LoginForm/>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootState): MapStatePropsType => ({isAuth: state.auth.isAuth})\r\nexport default connect(mapStateToProps, {loginTC})(Login)","import {ActionsType} from \"../types/types\";\r\nimport {AppRootState} from \"./redux-store\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\n\r\nconst INITIALIZED_SUCCESS = \"app/INITIALIZED-SUCCESS\";\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccessAC = () => ({type: INITIALIZED_SUCCESS} as const)\r\n\r\nexport const initializeAppTC = () => (dispatch: ThunkDispatch<AppRootState, unknown, ActionsType>) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccessAC())\r\n        })\r\n}\r\n\r\nexport default appReducer;","import React, {Component, ComponentType} from 'react';\nimport './App.css';\nimport {Route, withRouter} from 'react-router-dom';\nimport News from './components/News/News';\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport {DialogsContainer} from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport {NavbarContainer} from \"./components/Navbar/NavbarContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {AppRootState} from \"./redux/redux-store\";\nimport {initializeAppTC} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\n\nexport type AppPropsType = {\n    initializeAppTC: () => void\n    initialized: boolean\n}\n\nclass App extends Component<AppPropsType> {\n\n    componentDidMount() {\n        this.props.initializeAppTC()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <NavbarContainer/>\n                <div className=\"app-wrapper-content\">\n                    <Route path={'/profile/:userId?'} render={() => <ProfileContainer/>}/>\n                    <Route path={'/dialogs'} render={() => <DialogsContainer/>}/>\n                    <Route path={'/users'} render={() => <UsersContainer/>}/>\n                    <Route path={'/news'} render={() => <News/>}/>\n                    <Route path={'/musics'} render={() => <Music/>}/>\n                    <Route path={'/settings'} render={() => <Settings/>}/>\n                    <Route path={'/login'} render={() => <Login/>}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nlet mapStateToProps = (state: AppRootState) => ({\n    initialized: state.app.initialized\n})\n\nexport default compose<ComponentType>(withRouter, connect(mapStateToProps, {initializeAppTC}))(App)","import {v1} from \"uuid\";\r\n\r\nconst initialState = {\r\n    friends: [\r\n        {id: v1(), name: \"Anna\"},\r\n        {id: v1(), name: \"Ekaterina\"},\r\n        {id: v1(), name: \"Maria\"},\r\n        {id: v1(), name: \"Ludmila\"},\r\n        {id: v1(), name: \"Ksenia\"},\r\n    ]\r\n}\r\n\r\nexport type InitialStateSidebarType = typeof initialState\r\n\r\nexport const sidebarReducers = (state: InitialStateSidebarType = initialState)\r\n   :InitialStateSidebarType => {return state}\r\n","import {createStore, combineReducers, applyMiddleware} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport {sidebarReducers} from \"./sidebar-reducers\";\nimport authReducer from \"./auth-reducer\";\nimport thunk from \"redux-thunk\";\nimport appReducer from \"./app-reducer\";\n\n\nlet rootReducer = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    usersPage: usersReducer,\n    sidebar: sidebarReducers,\n    auth: authReducer,\n    app: appReducer,\n})\n\nlet store = createStore(rootReducer, applyMiddleware(thunk));\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type AppStoreType = typeof store\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type AppRootState = ReturnType<typeof rootReducer>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch\n\n// @ts-ignore\nwindow.store= store\n\nexport default store;","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport {HashRouter} from \"react-router-dom\";\nimport store from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <React.StrictMode>\n                <App/>\n            </React.StrictMode>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2nTph\",\"item\":\"Navbar_item__355rb\",\"itemSettings\":\"Navbar_itemSettings__OZSUI\",\"activeLink\":\"Navbar_activeLink__3f4ZQ\",\"friend\":\"Navbar_friend__2bnl2\",\"friends\":\"Navbar_friends__1-Yqq\",\"titleFriends\":\"Navbar_titleFriends__1pAqL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Users_avatar__2_fEW\",\"btn\":\"Users_btn__13_ax\",\"blockName\":\"Users_blockName__2vkrm\",\"boxUsers\":\"Users_boxUsers__2u6AK\",\"status\":\"Users_status__3Y4Bf\",\"boxUser\":\"Users_boxUser__3kPyR\",\"city\":\"Users_city__ge1mh\",\"pagesNumber\":\"Users_pagesNumber__pIbBg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLogin\":\"Login_formLogin__H9xG0\",\"headerLogin\":\"Login_headerLogin__2M6EA\",\"form\":\"Login_form__1Coiv\",\"error\":\"Login_error__3M24G\",\"span\":\"Login_span__2hrfa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1LqKh\",\"messageBox\":\"Dialogs_messageBox__3xROc\",\"namesItem\":\"Dialogs_namesItem__2kA0u\",\"newMessage\":\"Dialogs_newMessage__zaShY\",\"textarea\":\"Dialogs_textarea__RNq5G\",\"form\":\"Dialogs_form__ZFXSf\",\"error\":\"Dialogs_error__2BJFr\",\"span\":\"Dialogs_span__2lqy-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sochi\":\"ProfileInfo_sochi__3IYmK\",\"item\":\"ProfileInfo_item__3j-Wx\",\"profile\":\"ProfileInfo_profile__1TySW\",\"profileName\":\"ProfileInfo_profileName__2cjSC\",\"contacts\":\"ProfileInfo_contacts__bd6YH\",\"status\":\"ProfileInfo_status__U8pA6\",\"contact\":\"ProfileInfo_contact__3BT_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__2JCh2\",\"myPost\":\"MyPosts_myPost__1Tl_n\",\"form\":\"MyPosts_form__3GDRO\",\"textarea\":\"MyPosts_textarea__1FH0e\",\"error\":\"MyPosts_error__1FBuo\",\"span\":\"MyPosts_span__zGg2H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boxNames\":\"DialogItem_boxNames__2kiuI\",\"avatarImg\":\"DialogItem_avatarImg__1MbRP\",\"names\":\"DialogItem_names__3ccHx\",\"activeLink\":\"DialogItem_activeLink__2FvNU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__23q5J\",\"btn\":\"Paginator_btn__gXw0W\",\"selectedPage\":\"Paginator_selectedPage__1sbhj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__30OPs\",\"post\":\"Post_post__1v17P\",\"like\":\"Post_like__1rJv9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__2vxeo\",\"message\":\"Message_message__1zvA-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1i9tW\",\"loginBlock\":\"Header_loginBlock__2drjW\"};"],"sourceRoot":""}