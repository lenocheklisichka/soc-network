{"version":3,"sources":["reportWebVitals.ts","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","redux/dialogs-reducer.ts","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","hoc/withAuthRedirect.tsx","api/api.ts","components/Dialogs/DialogsContainer.tsx","redux/users-reducer.ts","assets/images/preloader.gif","components/common/Preloader/Preloader.tsx","assets/images/women.jpg","components/Users/User.tsx","components/Users/Paginator.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx","components/Navbar/images-icons/woman-avatar.png","components/Navbar/Navbar.tsx","components/Navbar/NavbarContainer.tsx","assets/images/photo-ava.jpg","redux/profile-reducer.ts","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/AddNewPostForm.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Header/Header.tsx","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","components/Login/LoginForm.tsx","components/Login/Login.tsx","App.tsx","redux/sidebar-reducers.ts","redux/redux-store.ts","index.tsx","components/Navbar/Navbar.module.css","components/Users/Users.module.css","components/Login/Login.module.css","components/Dialogs/Dialogs.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Users/Paginator.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Dialogs/Message/Message.module.css","components/Header/Header.module.css"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","News","Music","Settings","SEND_MESSAGE","initialState","dialogs","id","v1","name","avatar","messages","message","sendMessageActionCreator","newMessageBody","type","dialogsReducer","state","action","DialogItem","props","className","classes","boxNames","to","src","alt","avatarImg","names","activeClassName","activeLink","Message","AddMessageForm","dispatch","useDispatch","formik","useFormik","initialValues","validate","values","errors","onSubmit","resetForm","handleSubmit","span","form","error","placeholder","value","onChange","handleChange","onBlur","handleBlur","textarea","Button","variant","color","Dialogs","dialogsElements","dialogsPage","map","d","messagesElements","m","namesItem","messageBox","newMessage","MapStateToPropsTypeForRedirect","isAuth","auth","withAuthRedirect","Component","connect","restProps","ResultCodesEnum","mapStateToProps","mapDispatchToProps","onSendMessage","DialogsContainer","compose","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","response","data","post","delete","userId","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","TOGGLE_IS_FETCHING","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FOLLOWING_PROGRESS","defaultState","users","totalUsersCount","isFetching","followingInProgress","toggleIsFetching","toggleFollowingProgress","userID","usersReducer","u","followed","filter","Preloader","preloader","User","boxUser","boxUsers","photos","small","userPhoto","btn2","disabled","some","onClick","unfollow","btn","follow","blockName","city","Paginator","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","padinator","p","selectedPage","e","Users","pagesNumber","UsersContainer","pageNumber","getUsersThunk","this","React","usersPage","res","resultCode","Success","followSuccess","unfollowSuccess","items","totalCount","Navbar","friendElements","sidebar","friends","f","friend","woman","nav","item","itemSettings","titleFriends","NavbarContainer","ADD_POST","SET_USER_PROFILE","SET_STATUS","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","profileReducer","newPost","ProfileStatus","editMode","activateEditMode","setState","deActivateEditMode","onStatusChange","currentTarget","prevProps","prevState","profileName","fullName","avaWomen","women","aboutMe","contact","contacts","vk","instagram","github","onDoubleClick","autoFocus","ProfileInfo","sochi","large","avaWoman","Post","like","AddNewPostForm","style","marginLeft","MyPosts","postsElements","myPost","MyPostsContainer","profilePage","addPost","Profile","ProfileContainer","match","params","getUsersProfile","withRouter","Header","header","loginBlock","login","logoutTC","SET_USER_DATA","setAuthUserData","getAuthUserData","loginTC","authReducer","HeaderContainer","LoginForm","test","length","Grid","container","justifyContent","touched","TextField","label","margin","getFieldProps","FormControlLabel","control","Checkbox","formLogin","headerLogin","App","path","render","component","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d5469596.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\n\nconst News = () => {\n    return (\n        <div>\n            News\n        </div>\n    );\n}\n\nexport default News;","import React from \"react\";\n\nconst Music = () => {\n    return (\n        <div>\n            Music\n        </div>\n    );\n}\n\nexport default Music;","import React from \"react\";\n\nconst Settings = () => {\n    return (\n        <div>\n            Settings\n        </div>\n    );\n}\n\nexport default Settings;","import {DialogType, MessageType} from \"../types/types\";\nimport {v1} from \"uuid\";\nimport {ActionsTypes} from \"../types/types\";\n\nconst SEND_MESSAGE = \"SEND-MESSAGE\";\n\nconst initialState = {\n    dialogs: [\n        {\n            id: v1(),\n            name: \"Elena\",\n            avatar: 'https://klike.net/uploads/posts/2019-07/1564314090_3.jpg'\n        },\n        {\n            id: v1(),\n            name: \"Petr\",\n            avatar: 'https://storage.theoryandpractice.ru/tnp/uploads/image_unit/000/156/586/image/base_87716f252d.jpg'\n        },\n        {\n            id: v1(),\n            name: \"Anna\",\n            avatar: \"https://cs8.pikabu.ru/post_img/big/2017/11/21/8/151127099913557940.jpg\"\n        },\n        {\n            id: v1(),\n            name: \"Ludmila\",\n            avatar: \"https://cs8.pikabu.ru/post_img/big/2017/11/21/8/151127099913557940.jpg\"\n        },\n        {\n            id: v1(),\n            name: \"Aleksey\",\n            avatar: 'https://bipbap.ru/wp-content/uploads/2017/12/65620375-6b2b57fa5c7189ba4e3841d592bd5fc1-800-640x426.jpg'\n        },\n    ] as Array<DialogType>,\n\n    messages: [\n        {id: v1(), message: \"Hey, favorite! How are you?\"},\n        {id: v1(), message: \"Hey my dear! I'm great!I work remotely.How are you?\"},\n        {id: v1(), message: \"Hey, Anna! How are you doing in school?\"},\n        {id: v1(), message: \"Hey! I am fine! There are only fives at school\"},\n    ] as Array<MessageType>\n}\n\nexport type InitialStateType = typeof initialState\n\nconst dialogsReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\n    switch (action.type) {\n        case SEND_MESSAGE: {\n            return {\n                ...state,\n                messages: [...state.messages, {id: v1(), message: action.newMessageBody}],\n            }\n        }\n        default:\n            return state\n    }\n}\n\ntype SendMessageActionCreatorActionType = { type: typeof SEND_MESSAGE, newMessageBody: string }\nexport const sendMessageActionCreator = (newMessageBody: string): SendMessageActionCreatorActionType =>\n    ({type: \"SEND-MESSAGE\", newMessageBody} as const)\n\nexport default dialogsReducer","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport classes from \"./DialogItem.module.css\";\nimport {DialogType} from \"../../../types/types\";\n\nconst DialogItem: React.FC<DialogType> = (props) => {\n    return (\n        <div className={classes.boxNames}>\n            <NavLink to={\"/dialogs/\" + props.id}>\n                <img src={props.avatar} alt=\"\" className={classes.avatarImg}/>\n            </NavLink>\n            <div className={classes.names}>\n                <NavLink to={\"/dialogs/\" + props.id} activeClassName={classes.activeLink}>{props.name}</NavLink>\n            </div>\n        </div>\n    );\n}\n\nexport default DialogItem;","import React from \"react\";\nimport classes from \"./Message.module.css\";\nimport {MessageType} from \"../../../types/types\";\n\nconst Message: React.FC<MessageType> = (props) => {\n    return (\n        <div className={classes.messages}>\n            <div className={classes.message}>{props.message}</div>\n        </div>\n    )\n}\nexport default Message;","import React from \"react\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport {useFormik} from \"formik\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {sendMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\ntype ErrorType = {\r\n    newMessageBody?: string\r\n}\r\n\r\nconst AddMessageForm = () => {\r\n    const dispatch = useDispatch()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            newMessageBody: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: ErrorType = {}\r\n            if (values.newMessageBody) {\r\n                return undefined\r\n            } else if (!values.newMessageBody) {\r\n                errors.newMessageBody = 'Field is required!'\r\n            }\r\n            return errors\r\n        },\r\n\r\n        onSubmit: values => {\r\n            dispatch(sendMessageActionCreator(values.newMessageBody))\r\n            formik.resetForm()\r\n        },\r\n    })\r\n    return (\r\n        <form onSubmit={formik.handleSubmit}>\r\n            {formik.errors.newMessageBody && <span className={classes.span}>{formik.errors.newMessageBody}</span>}\r\n            <div className={classes.form + \" \" + (formik.errors.newMessageBody ? classes.error : \"\")}>\r\n                <textarea placeholder=\"Enter your message...\"\r\n                          name=\"newMessageBody\"\r\n                          value={formik.values.newMessageBody}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          className={classes.textarea}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Button type={'submit'} variant={'contained'} color={'primary'}>Send</Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport default AddMessageForm;","import React from \"react\";\nimport classes from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {DialogsPageType} from \"../../types/types\";\nimport AddMessageForm from \"./AddMessageForm\";\n\nexport type DialogsPropsType = {\n    dialogsPage: DialogsPageType\n}\n\nconst Dialogs = (props: DialogsPropsType) => {\n    let dialogsElements = props.dialogsPage.dialogs.map(d =>\n        <DialogItem key={d.id} name={d.name} id={d.id} avatar={d.avatar}/>)\n\n    let messagesElements = props.dialogsPage.messages.map(m =>\n        <Message key={m.id} id={m.id} message={m.message}/>)\n\n    return (\n        <div>\n            <div className={classes.dialogs}>\n                <div className={classes.namesItem}>{dialogsElements}</div>\n                <div>\n                    <div className={classes.messageBox}>{messagesElements}</div>\n                </div>\n            </div>\n            <div className={classes.newMessage}>\n                <AddMessageForm/>\n            </div>\n        </div>\n    );\n}\n\nexport default Dialogs;\n","import {Redirect} from \"react-router-dom\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppRootState} from \"../redux/redux-store\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\nconst MapStateToPropsTypeForRedirect = (state: AppRootState): MapStatePropsType => {\r\n    return {isAuth: state.auth.isAuth}\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    const AuthRedirectComponent = (props: MapStatePropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) {\r\n            return <Redirect to={\"/login\"}/>\r\n        }\r\n        return <Component {...restProps as T}/>\r\n    }\r\n    return connect(MapStateToPropsTypeForRedirect)(AuthRedirectComponent)\r\n}","import axios, {AxiosResponse} from \"axios\";\r\nimport {UserType} from \"../types/types\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {'API-KEY': 'd41ea747-ce32-41f3-af2e-99d81acb40a6'}\r\n})\r\n\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1,\r\n}\r\n\r\ntype GetItemsType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: string | null\r\n}\r\n\r\ntype MeResponseType = {\r\n    data: {\r\n        id: string\r\n        email: string\r\n        login: string\r\n    }\r\n    resultCode: ResultCodesEnum\r\n    messages: Array<string>\r\n}\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe?: boolean\r\n    captcha?: string\r\n}\r\n\r\nexport type ResponseType<D = {}> = {\r\n    resultCode: number\r\n    messages: Array<string>\r\n    fieldsErrors: Array<string>\r\n    data: D\r\n}\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get<GetItemsType>(`users?page=${currentPage}&count=${pageSize}`,)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n    followUsers(id: string) {\r\n        return instance.post(`follow/${id}`)\r\n    },\r\n    unFollowUsers(id: string) {\r\n        return instance.delete(`follow/${id}`)\r\n    },\r\n    getProfile(userId: string) {\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: string) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId: string) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`profile/status/`, {status: status})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<MeResponseType>(`auth/me`)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false) {\r\n        return instance.post<LoginParamsType, AxiosResponse<ResponseType<{ userId: number }>>>('auth/login', {\r\n            email,\r\n            password,\r\n            rememberMe\r\n        })\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n    }\r\n}","import {sendMessageActionCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {DialogsPageType} from \"../../types/types\";\nimport {AppDispatch, AppRootState} from \"../../redux/redux-store\";\nimport {connect} from \"react-redux\";\nimport {ComponentType} from \"react\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\ntype MapStateToPropsType = {\n    dialogsPage: DialogsPageType\n}\n\ntype MapDispatchToPropsType = {\n    onSendMessage: (newMessageBody: string) => void\n}\n\nlet mapStateToProps = (state: AppRootState): MapStateToPropsType => {\n    return {\n        dialogsPage: state.dialogsPage\n    }\n}\n\nlet mapDispatchToProps = (dispatch: AppDispatch): MapDispatchToPropsType => {\n    return {\n        onSendMessage: (newMessageBody: string) => {\n            dispatch(sendMessageActionCreator(newMessageBody))\n        }\n    }\n}\n\nexport const DialogsContainer = withAuthRedirect(connect(mapStateToProps, mapDispatchToProps)(Dialogs))\n\nexport default compose<ComponentType>(\n    connect(mapStateToProps, mapDispatchToProps), withAuthRedirect,)(Dialogs)\n","import {ActionsTypes, UserType} from \"../types/types\";\r\nimport {ResultCodesEnum, usersAPI} from \"../api/api\";\r\nimport {AppDispatch} from \"./redux-store\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET-USERS\";\r\nconst SET_CURRENT_PAGE = \"SET-CURRENT-PAGE\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET-TOTAL-USERS-COUNT\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE-IS-FOLLOWING-PROGRESS\";\r\n\r\nconst defaultState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<string>, // array id users\r\n}\r\n\r\ntype InitialStateType = typeof defaultState\r\n\r\nconst usersReducer = (state: InitialStateType = defaultState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW :\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    return u.id === action.userID ? {...u, followed: true} : u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    return u.id === action.userID ? {...u, followed: false} : u\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {...state, users: action.users}\r\n        case  SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        case TOGGLE_IS_FETCHING :\r\n            return {...state, isFetching: action.isFetching}\r\n        case  SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {...state,followingInProgress: action.isFetching \r\n                ? [...state.followingInProgress, action.userID]\r\n                :state.followingInProgress.filter(id => id !== action.userID)}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype FollowSuccessActionType = {type: typeof FOLLOW, userID: string}\r\nexport const followSuccess = (userID: string):FollowSuccessActionType => \r\n ({type: FOLLOW, userID} as const)\r\n\r\ntype UnfollowSuccessActionType = {type: typeof UNFOLLOW, userID: string}\r\nexport const unfollowSuccess = (userID: string):UnfollowSuccessActionType => \r\n ({type: UNFOLLOW, userID} as const)\r\n\r\ntype SetUsersActionType = {type: typeof SET_USERS, users: Array<UserType>}\r\nexport const setUsers = (users: Array<UserType>):SetUsersActionType =>\r\n ({type: SET_USERS, users} as const)\r\n\r\ntype SetCurrentPageActionType = {type: typeof SET_CURRENT_PAGE, currentPage: number}\r\nexport const setCurrentPage = (currentPage: number):SetCurrentPageActionType => \r\n ({type: SET_CURRENT_PAGE, currentPage} as const)\r\n\r\ntype SetTotalUsersCountActionType = {type: typeof SET_TOTAL_USERS_COUNT, totalUsersCount: number}\r\nexport const setTotalUsersCountAC = (totalUsersCount: number):SetTotalUsersCountActionType => \r\n ({type: SET_TOTAL_USERS_COUNT, totalUsersCount} as const)\r\n\r\ntype ToggleIsFetchingActionType = {type: typeof TOGGLE_IS_FETCHING, isFetching: boolean}\r\nexport const toggleIsFetching = (isFetching: boolean):ToggleIsFetchingActionType => \r\n ({type: TOGGLE_IS_FETCHING, isFetching} as const)\r\n\r\ntype ToggleFollowingProgressActionType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS,isFetching: boolean, userID: string\r\n }\r\nexport const toggleFollowingProgress = (isFetching: boolean, userID: string)\r\n:ToggleFollowingProgressActionType => \r\n({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userID} as const)\r\n\r\nexport const getUsersThunk = (currentPage: number, pageSize: number) => {\r\n    return (dispatch: AppDispatch) => {dispatch(toggleIsFetching(true))\r\n        usersAPI.getUsers(currentPage, pageSize)\r\n        .then((data: any) => {\r\n            dispatch(toggleIsFetching(false))\r\n            dispatch(setUsers(data.items))\r\n            dispatch(setTotalUsersCountAC(data.totalCount))\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const follow = (userID: string) => {\r\n    return (dispatch: AppDispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userID))\r\n        usersAPI.followUsers(userID)\r\n            .then((res: any) => {\r\n                if (res.data.resultCode === ResultCodesEnum.Success) {\r\n                    dispatch(followSuccess(userID))\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userID))\r\n            })\r\n    }\r\n}\r\nexport const unfollow = (userID: string) => {\r\n    return (dispatch: AppDispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userID))\r\n        usersAPI.unFollowUsers(userID)\r\n            .then((res: any) => {\r\n                if (res.data.resultCode === ResultCodesEnum.Success) {\r\n                    dispatch(unfollowSuccess(userID))\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userID))\r\n            })\r\n    }\r\n}\r\n\r\nexport default usersReducer","export default __webpack_public_path__ + \"static/media/preloader.e2ef5a7f.gif\";","import preloader from \"../../../assets/images/preloader.gif\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} alt=''/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","export default __webpack_public_path__ + \"static/media/women.56208115.jpg\";","import React from \"react\"\r\nimport classes from \"./Users.module.css\"\r\nimport {NavLink} from \"react-router-dom\"\r\nimport Preloader from \"./../common/Preloader/Preloader\"\r\nimport {UserType} from \"../../types/types\"\r\nimport userPhoto from \"./../../assets/images/women.jpg\"\r\n\r\nexport type UserPropsType = {\r\n    users: Array<UserType>\r\n    isFetching: boolean\r\n    followingInProgress: Array<string>\r\n    follow: (userID: string) => void\r\n    unfollow: (userID: string) => void\r\n}\r\n\r\nexport const User = (props: UserPropsType) => {\r\n    return (\r\n        <div className={classes.boxUser}>\r\n            {\r\n                props.users.map(u => <div key={u.id} className={classes.boxUsers}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={'/profile/' + u.id}>\r\n                                {props.isFetching ? <Preloader/> : null}\r\n                                <img src={u.photos.small !== null ? u.photos.small : userPhoto} alt={\"\"}\r\n                                     className={classes.avatar}/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {u.followed ?\r\n                                <button className={classes.btn2}\r\n                                        disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                        onClick={() => {\r\n                                            props.unfollow(u.id)\r\n                                        }}>Unfollow\r\n                                </button> :\r\n                                <button className={classes.btn}\r\n                                        disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                        onClick={() => {\r\n                                            props.follow(u.id)\r\n                                        }}>Follow\r\n                                </button>\r\n                            }\r\n                        </div>\r\n                    </span>\r\n                    <div className={classes.blockName}>\r\n                        <div>\r\n                            <div>{u.name}</div>\r\n                            <div className={classes.status}>{u.status}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div>{\"u.location.country\"}</div>\r\n                            <div className={classes.city}>{\"u.location.city\"}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport classes from \"./Paginator.module.css\"\r\n\r\nexport type PaginatorPropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nexport const Paginator: React.FC<PaginatorPropsType> = ({\r\n                                                            totalUsersCount, pageSize,\r\n                                                            currentPage, onPageChanged,\r\n                                                            portionSize = 15\r\n                                                        }) => {\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    const [portionNumber, setPortionNumber] = useState(1)\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div className={classes.padinator}>\r\n            {\r\n                portionNumber > 1 &&\r\n                <button className={classes.btn} onClick={() => {\r\n                    setPortionNumber(portionNumber - 1)\r\n                }}>Prev</button>\r\n            }\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                    return <span key={p} className={currentPage === p ? classes.selectedPage : \"\"}\r\n                                 onClick={(e) => {\r\n                                     onPageChanged(p)\r\n                                 }}>{p}</span>\r\n\r\n                })}\r\n            {\r\n                portionCount > portionNumber &&\r\n                <button className={classes.btn} onClick={() => {\r\n                    setPortionNumber(portionNumber + 1)\r\n                }}>Next</button>\r\n            }\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport UsersPropsType from \"./Users\";\r\nimport classes from \"./Users.module.css\";\r\nimport {UserType} from \"../../types/types\"\r\nimport {User} from \"./User\"\r\nimport {Paginator} from \"./Paginator\";\r\n\r\ntype UsersPropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: Array<UserType>\r\n    isFetching: boolean\r\n    followingInProgress: Array<string>\r\n    follow: (userID: string) => void\r\n    unfollow: (userID: string) => void\r\n}\r\n\r\nlet Users = (props: UsersPropsType) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.pagesNumber}>\r\n                <Paginator totalUsersCount={props.totalUsersCount} pageSize={props.pageSize}\r\n                           currentPage={props.currentPage} onPageChanged={props.onPageChanged}\r\n                />\r\n            </div>\r\n            <User users={props.users} isFetching={props.isFetching}\r\n                  followingInProgress={props.followingInProgress}\r\n                  follow={props.follow} unfollow={props.unfollow}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import {AppRootState} from \"../../redux/redux-store\";\r\nimport {\r\n    follow, getUsersThunk, unfollow,\r\n} from \"../../redux/users-reducer\";\r\nimport {UserType} from \"../../types/types\";\r\nimport {connect} from \"react-redux\";\r\nimport React, {ComponentType} from \"react\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport Users from \"./Users\";\r\nimport {compose} from \"redux\";\r\n\r\ntype MapStatePropsType = {\r\n    currentPage: number\r\n    pageSize: number\r\n    isFetching: boolean\r\n    totalUsersCount: number\r\n    users: Array<UserType>\r\n    followingInProgress: Array<string>\r\n}\r\ntype MapDispatchPropsType = {\r\n    getUsersThunk: (currentPage: number, pageSize: number) => void\r\n    follow: (userID: string) => void\r\n    unfollow: (userID: string) => void\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunk(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsersThunk(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching\r\n                ? <Preloader/>\r\n                : <Users users={this.props.users}\r\n                         totalUsersCount={this.props.totalUsersCount}\r\n                         pageSize={this.props.pageSize}\r\n                         currentPage={this.props.currentPage}\r\n                         follow={this.props.follow}\r\n                         unfollow={this.props.unfollow}\r\n                         onPageChanged={this.onPageChanged}\r\n                         isFetching={this.props.isFetching}\r\n                         followingInProgress={this.props.followingInProgress}\r\n                />\r\n            }\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppRootState): MapStatePropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch: AppDispatch): MapDispatchPropsType => {\r\n//     return {\r\n//         follow: (userID: string) => {\r\n//             dispatch(followAC(userID))\r\n//         },\r\n//         unfollow: (userID: string) => {\r\n//             dispatch(unfollowAC(userID))\r\n//         },\r\n//         setUsers: (users: Array<UserType>) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         setCurrentPage: (pageNumber: number) => {\r\n//             dispatch(setCurrentPageAC(pageNumber))\r\n//         },\r\n//         toggleIsFetching: (isFetching: boolean) => {\r\n//             dispatch(toggleIsFetchingAC(isFetching))\r\n//         },\r\n//         // setTotalUsersCount: (totalCount: number) => {\r\n//         //     dispatch(setTotalUsersCountAC(totalCount))\r\n//         // }\r\n//     }\r\n// }\r\n\r\n// export default withAuthRedirect( connect(mapStateToProps, {\r\n//     follow, unfollow,\r\n//     setUsers, setCurrentPage,\r\n//     toggleIsFetching, toggleFollowingProgress,\r\n//     getUsersThunk,\r\n//     setTotalUsersCount: setTotalUsersCountAC,\r\n// })(UsersContainer));\r\nexport default compose<ComponentType>(\r\n    connect(mapStateToProps, {follow, unfollow, getUsersThunk,}), withAuthRedirect)(UsersContainer)\r\n","export default __webpack_public_path__ + \"static/media/woman-avatar.b562e6d8.png\";","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport classes from \"./Navbar.module.css\";\nimport {InitialStateSidebarType} from \"../../redux/sidebar-reducers\";\nimport woman from \"../Navbar/images-icons/woman-avatar.png\";\n\ntype SidebarPropsType = {\n    sidebar: InitialStateSidebarType\n}\n\nexport const Navbar = (props: SidebarPropsType) => {\n\n    const friendElements = props.sidebar.friends.map(f =>\n        <div className={classes.friend} key={f.id}><img src={woman} alt=''/>{f.name}</div>\n    )\n\n    return (\n        <div className={classes.nav}>\n            <div className={classes.item}>\n                <NavLink to={\"/profile\"} activeClassName={classes.activeLink}>Profile</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to={\"/dialogs\"} activeClassName={classes.activeLink}>Messages</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to={\"/news\"} activeClassName={classes.activeLink}>News</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to={\"/users\"} activeClassName={classes.activeLink}>Users</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to={\"/musics\"} activeClassName={classes.activeLink}>Music</NavLink>\n            </div>\n            <div className={classes.itemSettings}>\n                <NavLink to={\"/settings\"} activeClassName={classes.activeLink}>Settings</NavLink>\n            </div>\n\n            <div className={classes.titleFriends}>Friends online:</div>\n            <div className={classes.friends}>\n                {friendElements}\n            </div>\n        </div>\n    );\n}\n\nexport default Navbar;","import {InitialStateSidebarType} from \"../../redux/sidebar-reducers\";\r\nimport {connect} from \"react-redux\";\r\nimport Navbar from \"./Navbar\";\r\nimport {AppRootState} from \"../../redux/redux-store\";\r\n\r\ntype mapStateToPropsType = {\r\n    sidebar: InitialStateSidebarType\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootState): mapStateToPropsType => {\r\n    return {\r\n        sidebar: state.sidebar\r\n    }\r\n}\r\n\r\nexport const NavbarContainer = connect(mapStateToProps)(Navbar);","export default __webpack_public_path__ + \"static/media/photo-ava.91f9e476.jpg\";","import {v1} from \"uuid\";\nimport {ActionsTypes, PostType, ProfileType} from \"../types/types\";\nimport {AppDispatch} from \"./redux-store\";\nimport {profileAPI, ResultCodesEnum, usersAPI} from \"../api/api\";\n\nconst ADD_POST = \"ADD-POST\";\nconst SET_USER_PROFILE = \"SET-USER-PROFILE\";\nconst SET_STATUS = \"SET-STATUS\";\n\nconst initialState = {\n    posts: [\n        {id: v1(), message: \"Hi, my name is Elena! I travel a lot around the world!\", likesCount: 75},\n        {id: v1(), message: \"I'm studying to be a front-end developer!\", likesCount: 85},\n    ] as Array<PostType>,\n    profile: null as ProfileType | null,\n    status: \"\",\n}\n\nexport type InitialStateType = typeof initialState\n\nconst profileReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\n    switch (action.type) {\n        case ADD_POST: {\n            const newPost: PostType = {\n                id: v1(),\n                message: action.newPostText,\n                likesCount: 0\n            }\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n            }\n        }\n        case SET_USER_PROFILE: {\n            return {...state, profile: action.profile}\n        }\n        case SET_STATUS: {\n            return {...state, status: action.status}\n        }\n        default:\n            return state\n    }\n}\n\ntype AddPostActionCreatorActionType = { type: typeof ADD_POST, newPostText: string }\nexport const addPostActionCreator = (newPostText: string): AddPostActionCreatorActionType =>\n    ({type: ADD_POST, newPostText} as const)\n\ntype SetUserProfileActionCreatorActionType = { type: typeof SET_USER_PROFILE, profile: ProfileType }\nexport const setUserProfileAC = (profile: ProfileType): SetUserProfileActionCreatorActionType =>\n    ({type: SET_USER_PROFILE, profile} as const)\n\ntype SetStatusActionType = { type: typeof SET_STATUS, status: string }\nexport const setStatus = (status: string): SetStatusActionType =>\n    ({type: SET_STATUS, status} as const)\n\n\nexport const getUsersProfile = (userId: string) => (dispatch: AppDispatch) => {\n    usersAPI.getProfile(userId).then((response: any) => {\n        dispatch(setUserProfileAC(response.data))\n    });\n}\nexport const getStatus = (userId: string) => (dispatch: AppDispatch) => {\n    profileAPI.getStatus(userId).then((response: any) => {\n        dispatch(setStatus(response.data))\n    })\n}\nexport const updateStatus = (status: string) => (dispatch: AppDispatch) => {\n    profileAPI.updateStatus(status).then((response: any) => {\n        if (response.data.resultCode === ResultCodesEnum.Success) {\n            dispatch(setStatus(response.data))\n        }\n    })\n}\n\nexport default profileReducer\n\n\n","import {ProfileType} from \"../../../types/types\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport React, {ChangeEvent} from \"react\";\r\nimport avaWomen from \"./../../../assets/images/photo-ava.jpg\"\r\nimport women from \"./../../../assets/images/women.jpg\"\r\nimport {updateStatus} from \"../../../redux/profile-reducer\";\r\n\r\nexport type ProfileStatusPropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    fullName: string\r\n    aboutMe: string\r\n    contacts: {\r\n        vk: string\r\n        instagram: string\r\n        github: string\r\n    }\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport class ProfileStatus extends React.Component<ProfileStatusPropsType> {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deActivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps: ProfileStatusPropsType, prevState: {}) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className={classes.profileName}>{this.props.fullName || avaWomen || women}</div>\r\n                <div><span>About Me:</span> {this.props.aboutMe || \"Student in it-incubator\"}</div>\r\n                <div className={classes.contact}><span>My contact:</span></div>\r\n                <div className={classes.contacts}><span>vk:</span> {this.props.contacts.vk || \"https://vk.com\"}</div>\r\n                <div className={classes.contacts}>\r\n                    <span>instagram:</span> {this.props.contacts.instagram || \"https://instagram.com\"}</div>\r\n                <div className={classes.contacts}>\r\n                    <span>github:</span> {this.props.contacts.github || \"https://github.com\"}</div>\r\n                <div className={classes.status}>\r\n                    {!this.state.editMode &&\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"Hi\"}</span>}\r\n\r\n                    {this.state.editMode &&\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deActivateEditMode}\r\n                           value={this.state.status}/>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\nimport classes from \"./ProfileInfo.module.css\";\nimport {ProfileType} from \"../../../types/types\";\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport avaWoman from \"./../../../assets/images/photo-ava.jpg\"\nimport {ProfileStatus} from \"./ProfileStatus\";\n\nexport type ProfileInfoPropsType = {\n    profile: ProfileType | null\n    status: string\n}\n\nexport type PhotosType = {\n    small: string\n    large: string\n}\n\nconst ProfileInfo = (props: ProfileInfoPropsType) => {\n    if (!props.profile) {\n        return <Preloader/>\n    }\n    return (\n        <div>\n            <div className={classes.sochi}>\n            </div>\n            <div className={classes.profile}>\n                <img src={props.profile.photos.large || avaWoman} alt=\"\"/>\n                <div>\n                    <ProfileStatus status={props.status} aboutMe={props.profile.aboutMe}\n                                   contacts={props.profile.contacts} fullName={props.profile.fullName}\n                                   profile={props.profile} updateStatus={props.profile.updateStatus}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ProfileInfo;","import React from \"react\";\nimport classes from \"./Post.module.css\";\nimport {PostType} from \"../../../../types/types\";\n\nconst Post: React.FC<PostType> = (props) => {\n    return (\n        <div>\n            <div className={classes.item}>\n                <img src=\"https://www.meme-arsenal.com/memes/74a9592e66a76c818ed95c1216487fa7.jpg\" alt=\"\"/>\n                <p className={classes.post}>{props.message}</p>\n            </div>\n            <div>\n                <span className={classes.like}>like</span> <span>{props.likesCount}</span>\n            </div>\n        </div>\n    );\n}\nexport default Post;","import React from \"react\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport {useFormik} from \"formik\";\r\nimport {TextField} from \"@mui/material\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport {FormikErrorType} from \"../../Login/LoginForm\";\r\n\r\ntype FormErrorType = {\r\n    newPostText?: string\r\n}\r\nconst AddNewPostForm = () => {\r\n    const dispatch = useDispatch()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            newPostText: '',\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormErrorType = {}\r\n            if (values.newPostText) {\r\n                return undefined\r\n            } else if (!values.newPostText) {\r\n                errors.newPostText = 'Field is required!'\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(addPostActionCreator(values.newPostText))\r\n            formik.resetForm()\r\n        }\r\n    })\r\n    return (\r\n        <form onSubmit={formik.handleSubmit} className={classes.form}>\r\n            {formik.errors.newPostText && <span className={classes.span}>{formik.errors.newPostText}</span>}\r\n            <div className={classes.form + \" \" + (formik.errors.newPostText ? classes.error : \"\")}>\r\n                <textarea placeholder={'Enter a new post...'}\r\n                          name={'newPostText'}\r\n                          value={formik.values.newPostText}\r\n                          className={classes.textarea}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Button type={'submit'} variant={'contained'}\r\n                        color={'primary'} style={{marginLeft: '10px'}}>Add</Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport default AddNewPostForm;","import React from \"react\";\nimport classes from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\nimport {PostType} from \"../../../types/types\"\nimport AddNewPostForm from \"./AddNewPostForm\";\n\ntype MyPostType = {\n    posts: Array<PostType>\n}\nconst MyPosts = (props: MyPostType) => {\n    let postsElements = props.posts.map(p => <div key={p.id}>\n        <Post key={p.id} id={p.id} message={p.message} likesCount={p.likesCount}/></div>)\n\n    return (\n        <div>\n            <h2 className={classes.myPost}>My posts</h2>\n            <AddNewPostForm/>\n            <div className={classes.posts}>{postsElements}</div>\n        </div>\n    )\n}\nexport default MyPosts","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {PostType} from \"../../../types/types\";\nimport {connect} from \"react-redux\";\nimport {AppDispatch, AppRootState} from \"../../../redux/redux-store\";\n\ntype MapStateToPropsType = {\n    posts: Array<PostType>\n}\n\ntype MapDispatchToPropsType = {\n    addPost: (newPostText: string) => void\n}\n\nlet mapStateToProps = (state: AppRootState): MapStateToPropsType => {\n    return {\n        posts: state.profilePage.posts\n    }\n}\n\nlet mapDispatchToProps = (dispatch: AppDispatch): MapDispatchToPropsType => {\n    return {\n        addPost: (newPostText: string) => {\n            dispatch(addPostActionCreator(newPostText))\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\nexport default MyPostsContainer","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport {ProfileType} from \"../../types/types\";\n\nexport type ProfilePropsType = {\n    profile: ProfileType | null\n    status: string\n    updateStatus: (status: string) => void\n}\n\nconst Profile = (props: ProfilePropsType) => {\n    return (\n        <div>\n            <ProfileInfo profile={props.profile} status={props.status}/>\n            <MyPostsContainer/>\n        </div>\n    );\n}\nexport default Profile;\n","import React, {ComponentType} from \"react\";\nimport {connect} from \"react-redux\";\nimport {AppRootState} from \"../../redux/redux-store\";\nimport {ProfileType} from \"../../types/types\";\nimport Profile from \"./Profile\";\nimport {withRouter} from \"react-router-dom\";\nimport {RouteComponentProps} from \"react-router-dom\";\nimport {getStatus, getUsersProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component<ComponentPropsType> {\n    componentDidMount() {\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = \"18936\"\n        }\n        this.props.getUsersProfile(userId)\n        this.props.getStatus(userId)\n    }\n\n    render() {\n        return (\n            <div>\n                <Profile {...this.props} profile={this.props.profile} status={this.props.status}\n                         updateStatus={this.props.updateStatus}/>\n            </div>\n        )\n    }\n}\n\nexport type PathParamsType = {\n    userId: string\n}\n\nexport type ComponentPropsType = RouteComponentProps<PathParamsType> & MapStatePropsType\n\nexport type MapStatePropsType = {\n    profile: ProfileType | null\n    status: string\n    getUsersProfile: (userId: string) => void\n    getStatus: (userId: string) => void\n    updateStatus: (status: string) => void\n}\n\nlet mapStateToProps = (state: AppRootState): MapStatePropsType => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status\n}) as MapStatePropsType\n\nexport default compose<ComponentType>(\n    connect(mapStateToProps, {getUsersProfile, getStatus, updateStatus}),\n    withRouter,\n    withAuthRedirect,\n)(ProfileContainer)\n","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport classes from \"./Header.module.css\";\nimport {HeaderPropsType} from \"./HeaderContainer\";\nimport Button from \"@mui/material/Button\";\n\nfunction Header(props: HeaderPropsType) {\n    return (\n        <header className={classes.header}>\n            <img src=\"https://arch-sochi.ru/wp-content/uploads/2020/12/img-arso-6268.jpg\" alt=\"logo\"/>\n            <div className={classes.loginBlock}>\n                {props.isAuth\n                    ? <div>{props.login} - <Button type={'submit'} variant={'contained'}\n                                                   color={'primary'} onClick={props.logoutTC}>Logout</Button>\n                    </div>\n                    : <NavLink to={'/login'}>Login</NavLink>}\n            </div>\n        </header>\n    )\n}\n\nexport default Header\n","import {ActionsTypes} from \"../types/types\";\r\nimport {AppDispatch} from \"./redux-store\";\r\nimport {authAPI, ResultCodesEnum} from \"../api/api\";\r\n\r\nconst SET_USER_DATA = \"SET-USER-DATA\";\r\n\r\nconst defaultState = {\r\n    userID: null as number | null,\r\n    login: null as string | null,\r\n    email: null as string | null,\r\n    isAuth: false,\r\n}\r\n\r\nexport type InitialStateType = typeof defaultState\r\n\r\nconst authReducer = (state: InitialStateType = defaultState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA :\r\n            return {\r\n                ...state, ...action.data\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport type SetAuthUserDataActionDataType = {\r\n    userID: number | null,\r\n    login: string | null,\r\n    email: string | null,\r\n    isAuth: boolean\r\n}\r\ntype SetAuthUserDataActionType = {\r\n    type: typeof SET_USER_DATA,\r\n    data: SetAuthUserDataActionDataType\r\n}\r\nexport const setAuthUserData = (userID: number | null, login: string | null, email: string | null, isAuth: boolean)\r\n    : SetAuthUserDataActionType => ({type: SET_USER_DATA, data: {userID, login, email, isAuth}} as const)\r\n\r\nexport const getAuthUserData = () => (dispatch: AppDispatch) => {\r\n    authAPI.me().then((response: any) => {\r\n        if (response.data.resultCode === ResultCodesEnum.Success) {\r\n            let {id, login, email} = response.data.data\r\n            dispatch(setAuthUserData(id, login, email, true))\r\n        }\r\n    })\r\n}\r\n\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean) => (dispatch: any) => {\r\n    authAPI.login(email, password, rememberMe).then((response: any) => {\r\n        if (response.data.resultCode === ResultCodesEnum.Success) {\r\n            dispatch(getAuthUserData())\r\n        }\r\n    })\r\n}\r\n\r\nexport const logoutTC = () => (dispatch: AppDispatch) => {\r\n    authAPI.logout()\r\n        .then((response: any) => {\r\n            if (response.data.resultCode === ResultCodesEnum.Success) {\r\n                dispatch(setAuthUserData(null, null, null, false))\r\n            }\r\n        })\r\n}\r\nexport default authReducer","import React from \"react\";\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {AppRootState} from \"../../redux/redux-store\";\nimport {getAuthUserData, logoutTC} from \"../../redux/auth-reducer\";\n\nexport type HeaderPropsType = {\n    isAuth: boolean\n    login: string\n    getAuthUserData: () => void\n    logoutTC: () => void\n}\n\nclass HeaderContainer extends React.Component<HeaderPropsType> {\n    componentDidMount() {\n        this.props.getAuthUserData()\n    }\n\n    render() {\n        return (\n            <Header login={this.props.login} isAuth={this.props.isAuth}\n                    getAuthUserData={this.props.getAuthUserData} logoutTC={this.props.logoutTC}/>\n        )\n    }\n}\n\ntype MapStatePropsType = {\n    isAuth: boolean\n    login: string\n}\n\nconst mapStateToProps = (state: AppRootState) => {\n    return {\n        isAuth: state.auth.isAuth,\n        login: state.auth.login,\n    } as MapStatePropsType\n}\n\nexport default connect(mapStateToProps, {getAuthUserData, logoutTC})(HeaderContainer)\n","import React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Checkbox from \"@mui/material/Checkbox\"\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\"\r\nimport TextField from \"@mui/material/TextField\"\r\nimport {useFormik} from \"formik\";\r\nimport classes from \"./Login.module.css\"\r\nimport {useDispatch} from \"react-redux\";\r\nimport {loginTC} from \"../../redux/auth-reducer\";\r\n\r\nexport type FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\nexport const LoginForm = () => {\r\n    const dispatch = useDispatch()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Email field is required!';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Password field is required!'\r\n            } else if (values.password.length < 3) {\r\n                errors.password = \"Password must be more than 3 characters!\"\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values.email, values.password, values.rememberMe))\r\n            formik.resetForm()\r\n        },\r\n    })\r\n    // if(props.isAuth) {\r\n    //     return <Redirect to={'/profile'}/>\r\n    // }\r\n    return (\r\n        <Grid container justifyContent={'center'}>\r\n            <form onSubmit={formik.handleSubmit} className={classes.form}>\r\n\r\n                {formik.touched.email && formik.errors.email ?\r\n                    <div className={classes.span}>{formik.errors.email}</div> : null}\r\n\r\n                <div className={classes.form + \" \" + (formik.errors.email ? classes.error : \"\")}>\r\n                    <TextField label=\"Email\"\r\n                               margin=\"normal\"\r\n                        // name=\"email\"\r\n                        // onChange={formik.handleChange}\r\n                        // value={formik.values.email}\r\n                        // onBlur={formik.handleBlur}\r\n                               {...formik.getFieldProps(\"email\")}\r\n                    />\r\n                </div>\r\n                {formik.touched.password && formik.errors.password ?\r\n                    <div className={classes.span}>{formik.errors.password}</div> : null}\r\n                <div className={classes.form + \" \" + (formik.errors.password ? classes.error : \"\")}>\r\n                    <TextField type=\"password\"\r\n                               label=\"Password\"\r\n                               margin=\"normal\"\r\n                               {...formik.getFieldProps(\"password\")}\r\n                    />\r\n                </div>\r\n                <FormControlLabel label={'Remember me'}\r\n                                  control={<Checkbox {...formik.getFieldProps(\"rememberMe\")}/>}/>\r\n                <Button type={'submit'} variant={'contained'} color={'primary'}>\r\n                    Login\r\n                </Button>\r\n            </form>\r\n        </Grid>\r\n    )\r\n}","import React from \"react\";\r\nimport {LoginForm} from \"./LoginForm\";\r\nimport classes from \"./Login.module.css\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginTC} from \"../../redux/auth-reducer\";\r\nimport {AppRootState} from \"../../redux/redux-store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Login = (props: MapStatePropsType) => {\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return (\r\n        <div className={classes.formLogin}>\r\n            <h1 className={classes.headerLogin}>Login</h1>\r\n            <LoginForm/>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootState): MapStatePropsType => ({isAuth: state.auth.isAuth})\r\nexport default connect(mapStateToProps, {loginTC})(Login)","import React from 'react';\nimport './App.css';\nimport {Redirect, Route} from 'react-router-dom';\nimport News from './components/News/News';\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport {DialogsContainer} from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport {NavbarContainer} from \"./components/Navbar/NavbarContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\n\n\nconst App = () => {\n    return (\n        <div className=\"app-wrapper\">\n            <HeaderContainer/>\n            <NavbarContainer/>\n            <div className=\"app-wrapper-content\">\n                <Route path={'/profile/:userId?'} render={() => <ProfileContainer/>}/>\n                <Route path={'/dialogs'} render={() => <DialogsContainer />}/>\n                <Route path={'/users'} render={() => <UsersContainer/>}/>\n                <Route path={'/news'} component={News}/>\n                <Route path={'/musics'} component={Music}/>\n                <Route path={'/settings'} component={Settings}/>\n                <Route path={'/login'} render={() => <Login/>}/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import {v1} from \"uuid\";\r\n\r\nconst initialState = {\r\n    friends: [\r\n        {id: v1(), name: \"Anna\"},\r\n        {id: v1(), name: \"Julia\"},\r\n        {id: v1(), name: \"Maria\"},\r\n        {id: v1(), name: \"Ludmila\"},\r\n        {id: v1(), name: \"Ksenia\"},\r\n    ]\r\n}\r\n\r\nexport type InitialStateSidebarType = typeof initialState\r\n\r\nexport const sidebarReducers = (state: InitialStateSidebarType = initialState)\r\n   :InitialStateSidebarType => {return state}\r\n","import {createStore, combineReducers, applyMiddleware} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport {sidebarReducers} from \"./sidebar-reducers\";\nimport authReducer from \"./auth-reducer\";\nimport thunk from \"redux-thunk\";\n\n\nlet rootReducer = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    usersPage: usersReducer,\n    sidebar: sidebarReducers,\n    auth: authReducer,\n})\n\nlet store = createStore(rootReducer, applyMiddleware(thunk));\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type AppStoreType = typeof store\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type AppRootState = ReturnType<typeof rootReducer>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch\n\n// @ts-ignore\nwindow.store= store\n\nexport default store;","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport {HashRouter} from \"react-router-dom\";\nimport store from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <React.StrictMode>\n                <App/>\n            </React.StrictMode>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2Ke8d\",\"item\":\"Navbar_item__2kG3i\",\"itemSettings\":\"Navbar_itemSettings__3JwbN\",\"activeLink\":\"Navbar_activeLink__8-yIR\",\"friend\":\"Navbar_friend__2UDOg\",\"friends\":\"Navbar_friends__tqxpp\",\"titleFriends\":\"Navbar_titleFriends__1d-Ed\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersTitle\":\"Users_usersTitle__2UJM3\",\"avatar\":\"Users_avatar__1eV_X\",\"btn\":\"Users_btn__2z9f6\",\"btn2\":\"Users_btn2__3zIb0\",\"blockName\":\"Users_blockName__1fg3_\",\"boxUsers\":\"Users_boxUsers__1RIcX\",\"status\":\"Users_status__1cDLT\",\"boxUser\":\"Users_boxUser__3opAu\",\"city\":\"Users_city__243q5\",\"button\":\"Users_button__2qb9v\",\"selectedPage\":\"Users_selectedPage__3pJR6\",\"pagesNumber\":\"Users_pagesNumber__CE7Fm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLogin\":\"Login_formLogin__wyrHU\",\"headerLogin\":\"Login_headerLogin__1DiBy\",\"form\":\"Login_form__2yVxD\",\"error\":\"Login_error__D4XbG\",\"span\":\"Login_span__2b8sG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1cYCC\",\"messageBox\":\"Dialogs_messageBox__2mmK5\",\"namesItem\":\"Dialogs_namesItem__3rW2m\",\"newMessage\":\"Dialogs_newMessage__L9lpE\",\"textarea\":\"Dialogs_textarea__15Lbn\",\"form\":\"Dialogs_form__2lzBb\",\"error\":\"Dialogs_error__kOMmc\",\"span\":\"Dialogs_span__q0M01\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sochi\":\"ProfileInfo_sochi__4n5zg\",\"item\":\"ProfileInfo_item__2_7Me\",\"profile\":\"ProfileInfo_profile__2Jslm\",\"profileName\":\"ProfileInfo_profileName__3EQy5\",\"contacts\":\"ProfileInfo_contacts__2QMPS\",\"status\":\"ProfileInfo_status__HwEI0\",\"contact\":\"ProfileInfo_contact__JOLrZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts___Dyst\",\"myPost\":\"MyPosts_myPost__pZTM2\",\"form\":\"MyPosts_form__1AT06\",\"textarea\":\"MyPosts_textarea__2p2Z9\",\"error\":\"MyPosts_error__MSn9F\",\"span\":\"MyPosts_span__2tZPv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boxNames\":\"DialogItem_boxNames__24axN\",\"avatarImg\":\"DialogItem_avatarImg__1fwtv\",\"names\":\"DialogItem_names__oFGwg\",\"activeLink\":\"DialogItem_activeLink__1Wn7X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"padinator\":\"Paginator_padinator__3EzMw\",\"btn\":\"Paginator_btn__1VYbg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1udBK\",\"post\":\"Post_post__2l9_M\",\"like\":\"Post_like__1Zh0N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__AAvSh\",\"message\":\"Message_message__pD96d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__321bd\",\"loginBlock\":\"Header_loginBlock__10JX9\"};"],"sourceRoot":""}